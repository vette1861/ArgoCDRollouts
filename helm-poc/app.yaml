# This applicationset will create an application for every chart in charts/* with values in values/*
# Each chart can set defaults to apply to all env clusters
# Each chart can set overrides to apply to specific env clusters
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: helm-poc-appset
  namespace: argocd
  annotations:
    argocd.argoproj.io/manifest-generate-paths: .. # Ensures charts path and values path is available for templating
spec:
  generators:
    - merge:
        mergeKeys: # Combined keys must be unique
          - server
          - app
          - name
        generators:
          - matrix:
              generators:
                - git:
                    repoURL: https://github.com/vette1861/ArgoCDRollouts.git
                    revision: HEAD
                    files:
                    - path: helm-poc/charts/**/defaults.yaml # Check all chart dirs for defaults.yaml
                - clusters:
                    selector:
                      matchExpressions:
                        - {key: env, operator: Exists} # Ensure cluster secret is labeled with env
                    values:
                      env: '{{ metadata.labels.env }}'
                      app: '{{ app }}'
                      chart.name: '{{ chart.name }}'
                      chart.version: '{{ chart.version }}'
                      chart.path: 'helm-poc/charts/{{ app }}/{{ metadata.labels.env }}' # Use base Chart.yaml in app dir 
                      chart.pathValues: '../../../values/{{ app }}' # preconfigure path to values file to simplify the template below
                      namespace: '{{ namespace }}'
                      type: 'default'
          - matrix:
              generators:
                - git:
                    repoURL: https://github.com/vette1861/ArgoCDRollouts.git
                    revision: HEAD
                    files:
                    - path: helm-poc/charts/**/overrides.yaml # Check all chart dirs for overrides.yaml
                - clusters:
                    selector:
                      matchLabels: 
                        env: '{{ env }}' # Only override app if app + env are in overrides.yaml
                      matchExpressions:
                        - {key: env, operator: Exists} # Ensure cluster secret is labeled with env
                    values:
                      env: '{{ env }}'
                      app: '{{ app }}'
                      chart.name: '{{ chart.name }}'
                      chart.version: '{{ chart.version }}'
                      chart.path: 'helm-poc/charts/{{ app }}/{{ env }}' # Use env specific Chart.yaml 
                      chart.pathValues: '../../../values/{{ app }}' # preconfigure path to values file to simplify the template below
                      namespace: '{{ namespace }}'
                      type: 'override'
          # - matrix:
          #     generators:
          - git:
              repoURL: https://github.com/vette1861/ArgoCDRollouts.git
              revision: HEAD
              files:
              - path: '{{ values.chart.pathValues }}/values-{{ values.env }}.yaml' 
              # - path: 'helm-poc/values/{{ app }}/values.yaml' 
                # - git:
                #     repoURL: https://github.com/vette1861/ArgoCDRollouts.git
                #     revision: HEAD
                #     files:
                #     - path: '{{ values.chart.pathValues }}/values.yaml' 
  template:
    metadata:
      name: "{{ values.app }}-{{ name }}"
      labels:
        app: "{{ values.app }}"
    spec:
      project: default
      destination:
        server: '{{ server }}'
        namespace: '{{ values.namespace }}'
      source:
        helm:
          releaseName: '{{ values.chart.name }}'
          values: |-
            '{{ envValues }}'
          # valueFiles:
          #   - '{{ values.chart.pathValues }}/values-{{ values.env }}.yaml'
          #   - '{{ values.chart.pathValues }}/values.yaml'
        path: '{{ values.chart.path }}'
        repoURL: https://github.com/vette1861/ArgoCDRollouts.git
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true
